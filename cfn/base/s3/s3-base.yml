AWSTemplateFormatVersion: "2010-09-09"
Description: "CFN S3 Bucket"
Parameters:
  S3BucketName: 
    Type: String
    Description: User Specified Bucket Name

  S3BucketAccessControlling:
    Type: String
    Default: Private
    AllowedValues:
      - Private
      - PublicRead
      - PublicReadWrite
      - AuthenticatedRead
      - LogDeliveryWrite
      - BucketOwnerRead
      - BucketOwnerFullControl
      - AwsExecRead
    Description: Input for Canned ACL Value

  S3BucketSSE:
    Type: String
    Default: AES256
    AllowedValues:
      - AES256
      - aws:kms
    Description: Input for Server Side Encryption of Bucket 

  S3BucketVersioning:
    Type: String
    Default: Suspended
    AllowedValues: 
      - Enabled
      - Suspended
    Description: Specify versioning for bucket
    ConstraintDescription: Must specify Enabled or Suspended

  S3ReplicationConfiguration:
    Type: String
    Default: Suspended
    AllowedValues: 
      - Enabled
      - Suspended
    Description: Specify replication for bucket
    ConstraintDescription: Must specify Enabled or Suspended

  S3WebHosting:
    Type: String
    Default: Suspended
    AllowedValues:
      - Enabled
      - Suspended
    Description: Decides bucket usage for static web hosting

  S3WebConfigIndexDoc: 
    Type: String
    Description: User Specifies index document for static web hosting 

  S3WebConfigErrorDoc: 
    Type: String
    Description: User Specifies error document for static web hosting

  S3NotificationSNSTopic:
    Type: String
    Description: User specifies SNS Topic for notifications

  S3LoggingConfiguration:
    Type: String
    Default: Suspended
    AllowedValues:
      - Enabled
      - Suspended
    Description: Descides bucket usage for logging

  S3LoggingBucketName:
    Type: String
    Description: User specifies S3 Logging bucket name

Conditions:
  IsEnabledAccessControlling: 
    !Or
    - !Equals [!Ref S3BucketAccessControlling, Private]
    - !Equals [!Ref S3BucketAccessControlling, PublicRead]
    - !Equals [!Ref S3BucketAccessControlling, PublicReadWrite]
    - !Equals [!Ref S3BucketAccessControlling, AuthenticatedRead]
    - !Equals [!Ref S3BucketAccessControlling, LogDeliveryWrite]
    - !Equals [!Ref S3BucketAccessControlling, BucketOwnerRead]
    - !Equals [!Ref S3BucketAccessControlling, BucketOwnerFullControl]
    - !Equals [!Ref S3BucketAccessControlling, AwsExecRead]
  IsEnabledSSE: !Equals [!Ref S3BucketSSE, AES256]                           
  IsEnabledVersioning: !Equals [!Ref S3BucketVersioning, Enabled]
  IsEnabledReplication: 
    !And
    - !Equals [!Ref S3BucketVersioning, Enabled]
    - !Equals [!Ref S3ReplicationConfiguration, Enabled]
  IsEnabledWebHosting: !Equals [!Ref S3WebHosting, Enabled]
  IsAvailableWebConfigIndexDoc: !Not [!Equals [!Ref S3WebConfigIndexDoc, '']]
  IsAvailableWebConfigErrorDoc: !Not [!Equals [!Ref S3WebConfigErrorDoc, '']]
  IsEnabledNotifications: !Not [!Equals [!Ref S3NotificationSNSTopic, '']]
  IsEnabledLogging: !Equals [!Ref S3LoggingConfiguration, Enabled]

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Ref S3BucketName

      AccessControl:
       !If 
       - IsEnabledAccessControlling
       - !Ref S3BucketAccessControlling
       - !Ref AWS::NoValue

      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm:
               !If 
               - IsEnabledSSE 
               - !Ref S3BucketSSE 
               - !Ref AWS::NoValue

      VersioningConfiguration: 
        !If 
        - IsEnabledVersioning
        - !Ref S3BucketVersioning 
        - !Ref AWS::NoValue

      ReplicationConfiguration:
        !If
        - IsEnabledReplication
        -
          Role: String
          Rules: 
            - Destination:
                Bucket: !Join ['', ['arn:aws:s3:::', !Join ['-', [!Ref 'AWS::Region', !Ref 'AWS::AccountId', replicationbucket]]]]
                StorageClass: STANDARD
              Id: Backup
              Prefix: ''
              Status: ENABLED
        - !Ref AWS::NoValue

      WebsiteConfiguration:
        !If
        - IsEnabledWebHosting
        -
          IndexDocument: !Ref S3WebConfigIndexDoc
          ErrorDocument: !Ref S3WebConfigErrorDoc
        - !Ref AWS::NoValue

      NotificationConfiguration:
        !If
        - IsEnabledNotifications
        - TopicConfigurations:
            Topic: !Ref S3NotificationSNSTopic
            Event: s3:ReducedRedundancyLostObject
        - !Ref AWS::NoValue

      LoggingConfiguration:
        !If
        - IsEnabledLogging
        -
          DestinationBucketName: !Ref LoggingBucket
          LogFilePrefix: testing-logs
        - !Ref AWS::NoValue

#destination logging bucket if logging is enabled
  LoggingBucket:
    Condition: IsEnabledLogging
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Ref S3LoggingBucketName

Outputs:
  NameOfBucket:
    Value: !Ref S3BucketName
  WebsiteURL:
    Value: 
      !If  
      - IsEnabledWebHosting
      - !GetAtt [S3Bucket, WebsiteURL] 
      - Is it a joke
    Description: URL for website hosted on S3
  S3BucketSecureURL:
    Value: 
      !If
      - IsEnabledWebHosting
      - !Join ['', ['https://', !GetAtt [S3Bucket, DomainName]]]
      - Is it a joke
    Description: Name of S3 bucket to hold website content





